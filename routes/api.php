<?php

/**
 * External Storage API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;

/**
 * post imagesCreate
 * Summary: Creates an image in storage.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::post('/image-storage/v1/images', 'ImagesController@imagesCreate');
/**
 * get imagesGetAll
 * Summary: Returns a list of image decriptions.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::get('/image-storage/v1/images', 'ImagesController@imagesGetAll');
/**
 * delete imagesDelete
 * Summary: Deletes an image by ID.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::delete('/image-storage/v1/images/{id}', 'ImagesController@imagesDelete');
/**
 * get imagesGet
 * Summary: Returns an image description.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::get('/image-storage/v1/images/{id}', 'ImagesController@imagesGet');
/**
 * get imagesGetContent
 * Summary: Returns an image content by ID.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::get('/image-storage/v1/images/{id}/content', 'ImagesController@imagesGetContent');
/**
 * get imagesGetContentUrl
 * Summary: Returns an image content URL by ID.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::get('/image-storage/v1/images/{id}/content-url', 'ImagesController@imagesGetContentUrl');
/**
 * get infoGetInfo
 * Summary: Returns external storage features.
 * Notes: 
 * Output-Formats: [text/plain, application/json, text/json]
 */
Route::get('/image-storage/v1/info', 'InfoController@infoGetInfo');

Route::get('/image-storage/v1/getinfo', 'InfoController@getInfo');

Route::middleware('auth:api')->get('/user', function (Request $request) {
    return $request->user();
});

Route::get('/free-images/{id}/content', 'FreeImagesController@freeImagesGetContent');

Route::get('/previews/{id}', 'PreviewsController@previewsGet');

Route::group([
    'prefix' => 'auth'
], function () {
    Route::post('login', 'JWTAuthController@login');
    Route::post('registration', 'JWTAuthController@registration');
    Route::post('logout', 'JWTAuthController@logout');
    Route::post('refresh', 'JWTAuthController@refresh');
});